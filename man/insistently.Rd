% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rate.R
\name{insistently}
\alias{insistently}
\title{Transform a function to make it run insistently}
\usage{
insistently(f, rate = rate_backoff(), quiet = TRUE)
}
\arguments{
\item{f}{A function to modify.}

\item{rate}{A \link[=rate_backoff]{rate} object determining the waiting time.}

\item{quiet}{If \code{FALSE}, prints a message displaying how long until
the next request.}
}
\value{
Wrapped function attempts to run \code{max_times} times; an
error occurs if all attempts fail.
}
\description{
Transform a function to make it run insistently
}
\examples{
# insistently() makes a function repeatedly try to work
risky_runif <- function(lo = 0, hi = 1) {
  y <- runif(1, lo, hi)
  if(y < 0.9) {
    stop(y, " is too small")
  }
  y
}

# For the purpose of this example, we first create a custom rate
# object with a low waiting time between attempts:
rate <- rate_backoff(pause_base = 0.2, pause_min = 0.005)

# Modify your function to run insistently.
insistent_risky_runif <- insistently(risky_runif, rate, quiet = FALSE)

set.seed(1)
insistent_risky_runif()

set.seed(3)
try(insistent_risky_runif())


# You can also use other types of rate settings, like a delay rate
# that waits for a fixed amount of time. Be aware that a delay rate
# has an infinite amount of attempts by default:
rate <- rate_delay(0.2, max_times = 3)
insistent_risky_runif <- insistently(risky_runif, rate = rate, quiet = FALSE)
try(insistent_risky_runif())


# insistently() and possibly() are a useful combination
rate <- rate_backoff(pause_base = 0.2, pause_min = 0.005)
possibly_insistent_risky_runif <- possibly(insistent_risky_runif, otherwise = -99)

set.seed(1)
possibly_insistent_risky_runif()
set.seed(3)
possibly_insistent_risky_runif()
}
\seealso{
\code{\link[httr:RETRY]{httr::RETRY()}} is a special case of \code{\link[=insistently]{insistently()}} for
HTTP verbs. \code{\link[=rate_backoff]{rate_backoff()}} for creating custom backoff
rates. \code{\link[=rate_sleep]{rate_sleep()}} for the function powering \code{insistently()}.
\code{\link[=safely]{safely()}} for another useful function operator.
}
